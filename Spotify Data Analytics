# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL. 

--What are the op 5 "liveness" tracks and who is the artist?
SELECT track_name, liveness
FROM BIT_DB.Spotifydata
GROUP BY track_name
ORDER BY liveness DESC
LIMIT 5;

-- #1 What are the top 10 most popular tracks?
SELECT track_name, artist_name, popularity
FROM BIT_DB.Spotifydata
GROUP BY track_name
ORDER BY popularity DESC
LIMIT 10;

-- #2 What are the 5 least danceable tracks?
SELECT track_name, danceability, artist_name
FROM BIT_DB.Spotifydata
GROUP BY track_name
ORDER BY danceability ASC
LIMIT 5;

-- #3 Which artists have more than 1 track on the top 50 list? Which artist(s) have the most?
SELECT artist_name, count(*)
FROM BIT_DB.Spotifydata
GROUP BY artist_name
HAVING count(artist_name) >1
ORDER BY count(*) DESC;

-- #4 What are the 5 shortest duration tracks?
SELECT track_name, duration_ms ,artist_name
FROM BIT_DB.Spotifydata
GROUP BY track_name
ORDER BY duration_ms ASC
LIMIT 5;

-- #5 Sort all the songs in decending rating of enegrgy?
SELECT track_name, energy, artist_name
FROM BIT_DB.Spotifydata
GROUP BY track_name
ORDER BY energy DESC;

-- #6 What is the average tempo of all the songs?
SELECT AVG(tempo)
FROM BIT_DB.Spotifydata;

-- #6 Which songs have a popularity score greater than 90 and instrumentalness of 0
SELECT track_name, artist_name, instrumentalness, popularity
FROM BIT_DB.Spotifydata
WHERE popularity >89
AND instrumentalness = 0
GROUP BY track_name;

--Calculate the average popularity for the artists in the Spotify data table. Then, for every artist with an average popularity of 90 or above, show their name, their average popularity, and label them as a “Top Star”.
WITH popularity_average_CTE AS (
SELECT s.artist_name,
AVG(s.popularity) AS average_popularity
FROM SpotifyData s 
GROUP BY s.artist_name
)
 
SELECT  artist_name, average_popularity,
'Top Star' AS tag
FROM popularity_average_CTE
WHERE average_popularity>=90;
